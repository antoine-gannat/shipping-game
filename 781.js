"use strict";(self.webpackChunkshipping_game=self.webpackChunkshipping_game||[]).push([[781],{4687:(e,t,r)=>{var i=r(3489);class n{static init(e){Object.defineProperty(this,"resizeTo",{set(e){globalThis.removeEventListener("resize",this.queueResize),this._resizeTo=e,e&&(globalThis.addEventListener("resize",this.queueResize),this.resize())},get(){return this._resizeTo}}),this.queueResize=()=>{this._resizeTo&&(this._cancelResize(),this._resizeId=requestAnimationFrame((()=>this.resize())))},this._cancelResize=()=>{this._resizeId&&(cancelAnimationFrame(this._resizeId),this._resizeId=null)},this.resize=()=>{if(!this._resizeTo)return;let e,t;if(this._cancelResize(),this._resizeTo===globalThis.window)e=globalThis.innerWidth,t=globalThis.innerHeight;else{const{clientWidth:r,clientHeight:i}=this._resizeTo;e=r,t=i}this.renderer.resize(e,t),this.render()},this._resizeId=null,this._resizeTo=null,this.resizeTo=e.resizeTo||null}static destroy(){globalThis.removeEventListener("resize",this.queueResize),this._cancelResize(),this._cancelResize=null,this.queueResize=null,this.resizeTo=null,this.resize=null}}n.extension=i.nw.Application;var s=r(901),a=r(9366);class o{static init(e){e=Object.assign({autoStart:!0,sharedTicker:!1},e),Object.defineProperty(this,"ticker",{set(e){this._ticker&&this._ticker.remove(this.render,this),this._ticker=e,e&&e.add(this.render,this,s.u.LOW)},get(){return this._ticker}}),this.stop=()=>{this._ticker.stop()},this.start=()=>{this._ticker.start()},this._ticker=null,this.ticker=e.sharedTicker?a.v.shared:new a.v,e.autoStart&&this.start()}static destroy(){if(this._ticker){const e=this._ticker;this.ticker=null,e.destroy()}}}o.extension=i.nw.Application,i.Rw.add(n),i.Rw.add(o)},9249:(e,t,r)=>{var i=r(3489);class n{constructor(e){this._renderer=e}push(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",canBundle:!1,action:"pushFilter",container:t,filterEffect:e})}pop(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",action:"popFilter",canBundle:!1})}execute(e){"pushFilter"===e.action?this._renderer.filter.push(e):"popFilter"===e.action&&this._renderer.filter.pop()}destroy(){this._renderer=null}}n.extension={type:[i.nw.WebGLPipes,i.nw.WebGPUPipes,i.nw.CanvasPipes],name:"filter"};var s=r(5321),a=r(1134),o=r(9818),h=r(1980),l=r(4537),u=r(9853),d=r(6669),c=r(5765),p=r(535),f=r(2692);const g=new s.y;function m(e,t){return t.clear(),x(e,t),t.isValid||t.set(0,0,0,0),e.renderGroup?t.applyMatrix(e.renderGroup.localTransform):t.applyMatrix(e.parentRenderGroup.worldTransform),t}function x(e,t){if(7!==e.localDisplayStatus||!e.measurable)return;const r=!!e.effects.length;let i=t;if((e.renderGroup||r)&&(i=f.W.get().clear()),e.boundsArea)t.addRect(e.boundsArea,e.worldTransform);else{if(e.renderPipeId){const t=e.bounds;i.addFrame(t.minX,t.minY,t.maxX,t.maxY,e.groupTransform)}const t=e.children;for(let e=0;e<t.length;e++)x(t[e],i)}if(r){let r=!1;for(let t=0;t<e.effects.length;t++)e.effects[t].addBounds&&(r||(r=!0,i.applyMatrix(e.parentRenderGroup.worldTransform)),e.effects[t].addBounds(i,!0));r&&(i.applyMatrix(e.parentRenderGroup.worldTransform.copyTo(g).invert()),t.addBounds(i,e.relativeGroupTransform)),t.addBounds(i),f.W.return(i)}else e.renderGroup&&(t.addBounds(i,e.relativeGroupTransform),f.W.return(i))}var _=r(4796);const b=new h.Z({attributes:{aPosition:{buffer:new Float32Array([0,0,1,0,1,1,0,1]),location:0,format:"float32x2",stride:8,offset:0}},indexBuffer:new Uint32Array([0,1,2,0,2,3])});class y{constructor(e){this._filterStackIndex=0,this._filterStack=[],this._filterGlobalUniforms=new l.o({uInputSize:{value:new Float32Array(4),type:"vec4<f32>"},uInputPixel:{value:new Float32Array(4),type:"vec4<f32>"},uInputClamp:{value:new Float32Array(4),type:"vec4<f32>"},uOutputFrame:{value:new Float32Array(4),type:"vec4<f32>"},uGlobalFrame:{value:new Float32Array(4),type:"vec4<f32>"},uOutputTexture:{value:new Float32Array(4),type:"vec4<f32>"}}),this._globalFilterBindGroup=new o.v({}),this.renderer=e}get activeBackTexture(){return this._activeFilterData?.backTexture}push(e){const t=this.renderer,r=e.filterEffect.filters;this._filterStack[this._filterStackIndex]||(this._filterStack[this._filterStackIndex]=this._getFilterData());const i=this._filterStack[this._filterStackIndex];if(this._filterStackIndex++,0===r.length)return void(i.skip=!0);const n=i.bounds;e.renderables?function(e,t){t.clear();const r=t.matrix;for(let r=0;r<e.length;r++){const i=e[r];i.globalDisplayStatus<7||(t.matrix=i.worldTransform,i.addBounds(t))}t.matrix=r}(e.renderables,n):e.filterEffect.filterArea?(n.clear(),n.addRect(e.filterEffect.filterArea),n.applyMatrix(e.container.worldTransform)):m(e.container,n);const s=t.renderTarget.rootRenderTarget.colorTexture.source;let a=s._resolution,o=0,h=s.antialias,l=!1,u=!1;for(let e=0;e<r.length;e++){const i=r[e];if(a=Math.min(a,i.resolution),o+=i.padding,"inherit"!==i.antialias&&(h="on"===i.antialias),!(i.compatibleRenderers&t.type)){u=!1;break}if(i.blendRequired&&!(t.backBuffer?.useBackBuffer??1)){(0,_.Z)("Blend filter requires backBuffer on WebGL renderer to be enabled. Set `useBackBuffer: true` in the renderer options."),u=!1;break}u=i.enabled||u,l=l||i.blendRequired}if(!u)return void(i.skip=!0);const c=t.renderTarget.rootViewPort;n.scale(a).fitBounds(0,c.width,0,c.height).scale(1/a).pad(o).ceil(),n.isPositive?(i.skip=!1,i.bounds=n,i.blendRequired=l,i.container=e.container,i.filterEffect=e.filterEffect,i.previousRenderSurface=t.renderTarget.renderSurface,i.inputTexture=d.z.getOptimalTexture(n.width,n.height,a,h),t.renderTarget.bind(i.inputTexture,!0),t.globalUniforms.push({offset:n})):i.skip=!0}pop(){const e=this.renderer;this._filterStackIndex--;const t=this._filterStack[this._filterStackIndex];if(t.skip)return;this._activeFilterData=t;const r=t.inputTexture,i=t.bounds;let n=u.x.EMPTY;if(e.renderTarget.finishRenderPass(),t.blendRequired){const r=this._filterStackIndex>0?this._filterStack[this._filterStackIndex-1].bounds:null,s=e.renderTarget.getRenderTarget(t.previousRenderSurface);n=this.getBackTexture(s,i,r)}t.backTexture=n;const s=t.filterEffect.filters;if(this._globalFilterBindGroup.setResource(r.source.style,2),this._globalFilterBindGroup.setResource(n.source,3),e.globalUniforms.pop(),1===s.length)s[0].apply(this,r,t.previousRenderSurface,!1),d.z.returnTexture(r);else{let e=t.inputTexture,r=d.z.getOptimalTexture(i.width,i.height,e.source._resolution,!1),n=0;for(n=0;n<s.length-1;++n){s[n].apply(this,e,r,!0);const t=e;e=r,r=t}s[n].apply(this,e,t.previousRenderSurface,!1),d.z.returnTexture(e),d.z.returnTexture(r)}t.blendRequired&&d.z.returnTexture(n)}getBackTexture(e,t,r){const i=e.colorTexture.source._resolution,n=d.z.getOptimalTexture(t.width,t.height,i,!1);let s=t.minX,a=t.minY;r&&(s-=r.minX,a-=r.minY),s=Math.floor(s*i),a=Math.floor(a*i);const o=Math.ceil(t.width*i),h=Math.ceil(t.height*i);return this.renderer.renderTarget.copyToTexture(e,n,{x:s,y:a},{width:o,height:h},{x:0,y:0}),n}applyFilter(e,t,r,i){const n=this.renderer,s=this._filterStack[this._filterStackIndex],o=s.bounds,h=a.E.shared,l=s.previousRenderSurface===r;let d=this.renderer.renderTarget.rootRenderTarget.colorTexture.source._resolution,p=this._filterStackIndex-1;for(;p>0&&this._filterStack[p].skip;)--p;p>0&&(d=this._filterStack[p].inputTexture.source._resolution);const f=this._filterGlobalUniforms,g=f.uniforms,m=g.uOutputFrame,x=g.uInputSize,_=g.uInputPixel,y=g.uInputClamp,T=g.uGlobalFrame,v=g.uOutputTexture;if(l){let e=this._filterStackIndex;for(;e>0;){e--;const t=this._filterStack[this._filterStackIndex-1];if(!t.skip){h.x=t.bounds.minX,h.y=t.bounds.minY;break}}m[0]=o.minX-h.x,m[1]=o.minY-h.y}else m[0]=0,m[1]=0;m[2]=t.frame.width,m[3]=t.frame.height,x[0]=t.source.width,x[1]=t.source.height,x[2]=1/x[0],x[3]=1/x[1],_[0]=t.source.pixelWidth,_[1]=t.source.pixelHeight,_[2]=1/_[0],_[3]=1/_[1],y[0]=.5*_[2],y[1]=.5*_[3],y[2]=t.frame.width*x[2]-.5*_[2],y[3]=t.frame.height*x[3]-.5*_[3];const w=this.renderer.renderTarget.rootRenderTarget.colorTexture;T[0]=h.x*d,T[1]=h.y*d,T[2]=w.source.width*d,T[3]=w.source.height*d;const S=this.renderer.renderTarget.getRenderTarget(r);if(n.renderTarget.bind(r,!!i),r instanceof u.x?(v[0]=r.frame.width,v[1]=r.frame.height):(v[0]=S.width,v[1]=S.height),v[2]=S.isRoot?-1:1,f.update(),n.renderPipes.uniformBatch){const e=n.renderPipes.uniformBatch.getUboResource(f);this._globalFilterBindGroup.setResource(e,0)}else this._globalFilterBindGroup.setResource(f,0);this._globalFilterBindGroup.setResource(t.source,1),this._globalFilterBindGroup.setResource(t.source.style,2),e.groups[0]=this._globalFilterBindGroup,n.encoder.draw({geometry:b,shader:e,state:e._state,topology:"triangle-list"}),n.type===c.g.WEBGL&&n.renderTarget.finishRenderPass()}_getFilterData(){return{skip:!1,inputTexture:null,bounds:new p.Y,container:null,filterEffect:null,blendRequired:!1,previousRenderSurface:null}}calculateSpriteMatrix(e,t){const r=this._activeFilterData,i=e.set(r.inputTexture._source.width,0,0,r.inputTexture._source.height,r.bounds.minX,r.bounds.minY),n=t.worldTransform.copyTo(s.y.shared);return n.invert(),i.prepend(n),i.scale(1/t.texture.frame.width,1/t.texture.frame.height),i.translate(t.anchor.x,t.anchor.y),i}}y.extension={type:[i.nw.WebGLSystem,i.nw.WebGPUSystem],name:"filter"},i.Rw.add(y),i.Rw.add(n)},2189:(e,t,r)=>{r.d(t,{O:()=>s});var i=r(4537);const n={};function s(e){let t=n[e];if(t)return t;const r=new Int32Array(e);for(let t=0;t<e;t++)r[t]=t;return t=n[e]=new i.o({uTextures:{value:r,type:"i32",size:e}},{isStatic:!0}),t}},9010:(e,t,r)=>{var i=r(3489),n=r(4108),s=r(6798),a=r(5906),o=r(9989),h=r(8859);class l{constructor(e,t){this.state=s.Z.for2d(),this._graphicsBatchesHash=Object.create(null),this.renderer=e,this._adaptor=t,this._adaptor.init()}validateRenderable(e){const t=e.context,r=!!this._graphicsBatchesHash[e.uid],i=this.renderer.graphicsContext.updateGpuContext(t);return!(!i.isBatchable&&r===i.isBatchable)}addRenderable(e,t){const r=this.renderer.graphicsContext.updateGpuContext(e.context);e._didGraphicsUpdate&&(e._didGraphicsUpdate=!1,this._rebuild(e)),r.isBatchable?this._addToBatcher(e,t):(this.renderer.renderPipes.batch.break(t),t.add(e))}updateRenderable(e){const t=this._graphicsBatchesHash[e.uid];if(t)for(let e=0;e<t.length;e++){const r=t[e];r.batcher.updateElement(r)}}destroyRenderable(e){this._graphicsBatchesHash[e.uid]&&this._removeBatchForRenderable(e.uid)}execute(e){if(!e.isRenderable)return;const t=this.renderer,r=e.context;if(!t.graphicsContext.getGpuContext(r).batches.length)return;const i=r.customShader||this._adaptor.shader;this.state.blendMode=e.groupBlendMode;const n=i.resources.localUniforms.uniforms;n.uTransformMatrix=e.groupTransform,n.uRound=t._roundPixels|e._roundPixels,(0,o.V)(e.groupColorAlpha,n.uColor,0),this._adaptor.execute(this,e)}_rebuild(e){const t=!!this._graphicsBatchesHash[e.uid],r=this.renderer.graphicsContext.updateGpuContext(e.context);t&&this._removeBatchForRenderable(e.uid),r.isBatchable&&this._initBatchesForRenderable(e),e.batched=r.isBatchable}_addToBatcher(e,t){const r=this.renderer.renderPipes.batch,i=this._getBatchesForRenderable(e);for(let e=0;e<i.length;e++){const n=i[e];r.addToBatch(n,t)}}_getBatchesForRenderable(e){return this._graphicsBatchesHash[e.uid]||this._initBatchesForRenderable(e)}_initBatchesForRenderable(e){const t=e.context,r=this.renderer.graphicsContext.getGpuContext(t),i=this.renderer._roundPixels|e._roundPixels,n=r.batches.map((t=>{const r=a.u.get(h.I);return t.copyTo(r),r.renderable=e,r.roundPixels=i,r}));return void 0===this._graphicsBatchesHash[e.uid]&&e.on("destroyed",(()=>{this.destroyRenderable(e)})),this._graphicsBatchesHash[e.uid]=n,n}_removeBatchForRenderable(e){this._graphicsBatchesHash[e].forEach((e=>{a.u.return(e)})),this._graphicsBatchesHash[e]=null}destroy(){this.renderer=null,this._adaptor.destroy(),this._adaptor=null,this.state=null;for(const e in this._graphicsBatchesHash)this._removeBatchForRenderable(e);this._graphicsBatchesHash=null}}l.extension={type:[i.nw.WebGLPipes,i.nw.WebGPUPipes,i.nw.CanvasPipes],name:"graphics"},i.Rw.add(l),i.Rw.add(n.hJ)},8540:(e,t,r)=>{var i=r(3489),n=r(5321),s=r(9818),a=r(4537),o=r(5906),h=r(9989),l=r(2653);class u{constructor(e,t){this.localUniforms=new a.o({uTransformMatrix:{value:new n.y,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),this.localUniformsBindGroup=new s.v({0:this.localUniforms}),this._meshDataHash=Object.create(null),this._gpuBatchableMeshHash=Object.create(null),this.renderer=e,this._adaptor=t,this._adaptor.init()}validateRenderable(e){const t=this._getMeshData(e),r=t.batched,i=e.batched;if(t.batched=i,r!==i)return!0;if(i){const r=e._geometry;if(r.indices.length!==t.indexSize||r.positions.length!==t.vertexSize)return t.indexSize=r.indices.length,t.vertexSize=r.positions.length,!0;const i=this._getBatchableMesh(e),n=e.texture;if(i.texture._source!==n._source&&i.texture._source!==n._source)return!i.batcher.checkAndUpdateTexture(i,n)}return!1}addRenderable(e,t){const r=this.renderer.renderPipes.batch,{batched:i}=this._getMeshData(e);if(i){const t=this._getBatchableMesh(e);t.texture=e._texture,t.geometry=e._geometry,r.addToBatch(t)}else r.break(t),t.add({renderPipeId:"mesh",mesh:e})}updateRenderable(e){if(e.batched){const t=this._gpuBatchableMeshHash[e.uid];t.texture=e._texture,t.geometry=e._geometry,t.batcher.updateElement(t)}}destroyRenderable(e){this._meshDataHash[e.uid]=null;const t=this._gpuBatchableMeshHash[e.uid];t&&(o.u.return(t),this._gpuBatchableMeshHash[e.uid]=null)}execute({mesh:e}){if(!e.isRenderable)return;e.state.blendMode=e.groupBlendMode;const t=this.localUniforms;t.uniforms.uTransformMatrix=e.groupTransform,t.uniforms.uRound=this.renderer._roundPixels|e._roundPixels,t.update(),(0,h.V)(e.groupColorAlpha,t.uniforms.uColor,0),this._adaptor.execute(this,e)}_getMeshData(e){return this._meshDataHash[e.uid]||this._initMeshData(e)}_initMeshData(e){return this._meshDataHash[e.uid]={batched:e.batched,indexSize:e._geometry.indices?.length,vertexSize:e._geometry.positions?.length},e.on("destroyed",(()=>{this.destroyRenderable(e)})),this._meshDataHash[e.uid]}_getBatchableMesh(e){return this._gpuBatchableMeshHash[e.uid]||this._initBatchableMesh(e)}_initBatchableMesh(e){const t=o.u.get(l.X);return t.mesh=e,t.texture=e._texture,t.roundPixels=this.renderer._roundPixels|e._roundPixels,this._gpuBatchableMeshHash[e.uid]=t,t.mesh=e,t}destroy(){for(const e in this._gpuBatchableMeshHash)this._gpuBatchableMeshHash[e]&&o.u.return(this._gpuBatchableMeshHash[e]);this._gpuBatchableMeshHash=null,this._meshDataHash=null,this.localUniforms=null,this.localUniformsBindGroup=null,this._adaptor.destroy(),this._adaptor=null,this.renderer=null}}u.extension={type:[i.nw.WebGLPipes,i.nw.WebGPUPipes,i.nw.CanvasPipes],name:"mesh"},i.Rw.add(u)},2653:(e,t,r)=>{r.d(t,{X:()=>i});class i{constructor(){this.batcher=null,this.batch=null,this.roundPixels=0,this._uvUpdateId=-1,this._textureMatrixUpdateId=-1}get blendMode(){return this.mesh.groupBlendMode}reset(){this.mesh=null,this.texture=null,this.batcher=null,this.batch=null}packIndex(e,t,r){const i=this.geometry.indices;for(let n=0;n<i.length;n++)e[t++]=i[n]+r}packAttributes(e,t,r,i){const n=this.mesh,s=this.geometry,a=n.groupTransform,o=i<<16|65535&this.roundPixels,h=a.a,l=a.b,u=a.c,d=a.d,c=a.tx,p=a.ty,f=s.positions,g=s.getBuffer("aUV"),m=g.data;let x=m;const _=this.texture.textureMatrix;_.isSimple||(x=this._transformedUvs,this._textureMatrixUpdateId===_._updateID&&this._uvUpdateId===g._updateID||((!x||x.length<m.length)&&(x=this._transformedUvs=new Float32Array(m.length)),this._textureMatrixUpdateId=_._updateID,this._uvUpdateId=g._updateID,_.multiplyUvs(m,x)));const b=n.groupColorAlpha;for(let i=0;i<f.length;i+=2){const n=f[i],s=f[i+1];e[r]=h*n+u*s+c,e[r+1]=l*n+d*s+p,e[r+2]=x[i],e[r+3]=x[i+1],t[r+4]=b,t[r+5]=o,r+=6}}get vertexSize(){return this.geometry.positions.length/2}get indexSize(){return this.geometry.indices.length}}},4428:(e,t,r)=>{r.d(t,{x:()=>h});var i=r(7494),n=r(5324),s=r(1980),a=r(156);const o=class e extends s.Z{constructor(...t){let r=t[0]??{};r instanceof Float32Array&&((0,a.a)(a.P,"use new MeshGeometry({ positions, uvs, indices }) instead"),r={positions:r,uvs:t[1],indices:t[2]}),r={...e.defaultOptions,...r};const s=r.positions||new Float32Array([0,0,1,0,1,1,0,1]),o=r.uvs||new Float32Array([0,0,1,0,1,1,0,1]),h=r.indices||new Uint32Array([0,1,2,0,2,3]),l=r.shrinkBuffersToFit;super({attributes:{aPosition:{buffer:new i.l({data:s,label:"attribute-mesh-positions",shrinkToFit:l,usage:n.F.VERTEX|n.F.COPY_DST}),format:"float32x2",stride:8,offset:0},aUV:{buffer:new i.l({data:o,label:"attribute-mesh-uvs",shrinkToFit:l,usage:n.F.VERTEX|n.F.COPY_DST}),format:"float32x2",stride:8,offset:0}},indexBuffer:new i.l({data:h,label:"index-mesh-buffer",shrinkToFit:l,usage:n.F.INDEX|n.F.COPY_DST}),topology:r.topology}),this.batchMode="auto"}get positions(){return this.attributes.aPosition.buffer.data}set positions(e){this.attributes.aPosition.buffer.data=e}get uvs(){return this.attributes.aUV.buffer.data}set uvs(e){this.attributes.aUV.buffer.data=e}get indices(){return this.indexBuffer.data}set indices(e){this.indexBuffer.data=e}};o.defaultOptions={topology:"triangle-list",shrinkBuffersToFit:!1};let h=o},2092:(e,t,r)=>{var i=r(3489),n=r(5906),s=r(2653),a=r(156),o=r(4428);const h=class e extends o.x{constructor(...e){super({});let t=e[0]??{};"number"==typeof t&&((0,a.a)(a.P,"PlaneGeometry constructor changed please use { width, height, verticesX, verticesY } instead"),t={width:t,height:e[1],verticesX:e[2],verticesY:e[3]}),this.build(t)}build(t){t={...e.defaultOptions,...t},this.verticesX=this.verticesX??t.verticesX,this.verticesY=this.verticesY??t.verticesY,this.width=this.width??t.width,this.height=this.height??t.height;const r=this.verticesX*this.verticesY,i=[],n=[],s=[],a=this.verticesX-1,o=this.verticesY-1,h=this.width/a,l=this.height/o;for(let e=0;e<r;e++){const t=e%this.verticesX,r=e/this.verticesX|0;i.push(t*h,r*l),n.push(t/a,r/o)}const u=a*o;for(let e=0;e<u;e++){const t=e%a,r=e/a|0,i=r*this.verticesX+t,n=r*this.verticesX+t+1,o=(r+1)*this.verticesX+t,h=(r+1)*this.verticesX+t+1;s.push(i,n,o,n,h,o)}this.buffers[0].data=new Float32Array(i),this.buffers[1].data=new Float32Array(n),this.indexBuffer.data=new Uint32Array(s),this.buffers[0].update(),this.buffers[1].update(),this.indexBuffer.update()}};h.defaultOptions={width:100,height:100,verticesX:10,verticesY:10};let l=h;const u=class e extends l{constructor(t={}){super({width:(t={...e.defaultOptions,...t}).width,height:t.height,verticesX:4,verticesY:4}),this.update(t)}update(e){this.width=e.width??this.width,this.height=e.height??this.height,this._originalWidth=e.originalWidth??this._originalWidth,this._originalHeight=e.originalHeight??this._originalHeight,this._leftWidth=e.leftWidth??this._leftWidth,this._rightWidth=e.rightWidth??this._rightWidth,this._topHeight=e.topHeight??this._topHeight,this._bottomHeight=e.bottomHeight??this._bottomHeight,this.updateUvs(),this.updatePositions()}updatePositions(){const e=this.positions,t=this._leftWidth+this._rightWidth,r=this.width>t?1:this.width/t,i=this._topHeight+this._bottomHeight,n=this.height>i?1:this.height/i,s=Math.min(r,n);e[9]=e[11]=e[13]=e[15]=this._topHeight*s,e[17]=e[19]=e[21]=e[23]=this.height-this._bottomHeight*s,e[25]=e[27]=e[29]=e[31]=this.height,e[2]=e[10]=e[18]=e[26]=this._leftWidth*s,e[4]=e[12]=e[20]=e[28]=this.width-this._rightWidth*s,e[6]=e[14]=e[22]=e[30]=this.width,this.getBuffer("aPosition").update()}updateUvs(){const e=this.uvs;e[0]=e[8]=e[16]=e[24]=0,e[1]=e[3]=e[5]=e[7]=0,e[6]=e[14]=e[22]=e[30]=1,e[25]=e[27]=e[29]=e[31]=1;const t=1/this._originalWidth,r=1/this._originalHeight;e[2]=e[10]=e[18]=e[26]=t*this._leftWidth,e[9]=e[11]=e[13]=e[15]=r*this._topHeight,e[4]=e[12]=e[20]=e[28]=1-t*this._rightWidth,e[17]=e[19]=e[21]=e[23]=1-r*this._bottomHeight,this.getBuffer("aUV").update()}};u.defaultOptions={width:100,height:100,leftWidth:10,topHeight:10,rightWidth:10,bottomHeight:10,originalWidth:100,originalHeight:100};let d=u;class c{constructor(e){this._gpuSpriteHash=Object.create(null),this._renderer=e}addRenderable(e,t){const r=this._getGpuSprite(e);e._didSpriteUpdate&&this._updateBatchableSprite(e,r),this._renderer.renderPipes.batch.addToBatch(r)}updateRenderable(e){const t=this._gpuSpriteHash[e.uid];e._didSpriteUpdate&&this._updateBatchableSprite(e,t),t.batcher.updateElement(t)}validateRenderable(e){const t=e._texture,r=this._getGpuSprite(e);return r.texture._source!==t._source&&!r.batcher.checkAndUpdateTexture(r,t)}destroyRenderable(e){const t=this._gpuSpriteHash[e.uid];n.u.return(t),this._gpuSpriteHash[e.uid]=null}_updateBatchableSprite(e,t){e._didSpriteUpdate=!1,t.geometry.update(e),t.texture=e._texture}_getGpuSprite(e){return this._gpuSpriteHash[e.uid]||this._initGPUSprite(e)}_initGPUSprite(e){const t=new s.X;return t.geometry=new d,t.mesh=e,t.texture=e._texture,t.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuSpriteHash[e.uid]=t,e.on("destroyed",(()=>{this.destroyRenderable(e)})),t}destroy(){for(const e in this._gpuSpriteHash)this._gpuSpriteHash[e].geometry.destroy();this._gpuSpriteHash=null,this._renderer=null}}c.extension={type:[i.nw.WebGLPipes,i.nw.WebGPUPipes,i.nw.CanvasPipes],name:"nineSliceSprite"},i.Rw.add(c)},1015:(e,t,r)=>{var i=r(3489),n=r(6798),s=r(5765),a=r(9989),o=r(2653),h=r(4428),l=r(5321),u=r(8157),d=r(8070),c=r(9637),p=r(2267),f=r(4537),g=r(9853);const m={name:"tiling-bit",vertex:{header:"\n            struct TilingUniforms {\n                uMapCoord:mat3x3<f32>,\n                uClampFrame:vec4<f32>,\n                uClampOffset:vec2<f32>,\n                uTextureTransform:mat3x3<f32>,\n                uSizeAnchor:vec4<f32>\n            };\n\n            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;\n            @group(2) @binding(1) var uTexture: texture_2d<f32>;\n            @group(2) @binding(2) var uSampler: sampler;\n        ",main:"\n            uv = (tilingUniforms.uTextureTransform * vec3(uv, 1.0)).xy;\n\n            position = (position - tilingUniforms.uSizeAnchor.zw) * tilingUniforms.uSizeAnchor.xy;\n        "},fragment:{header:"\n            struct TilingUniforms {\n                uMapCoord:mat3x3<f32>,\n                uClampFrame:vec4<f32>,\n                uClampOffset:vec2<f32>,\n                uTextureTransform:mat3x3<f32>,\n                uSizeAnchor:vec4<f32>\n            };\n\n            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;\n            @group(2) @binding(1) var uTexture: texture_2d<f32>;\n            @group(2) @binding(2) var uSampler: sampler;\n        ",main:"\n\n            var coord = vUV + ceil(tilingUniforms.uClampOffset - vUV);\n            coord = (tilingUniforms.uMapCoord * vec3(coord, 1.0)).xy;\n            var unclamped = coord;\n            coord = clamp(coord, tilingUniforms.uClampFrame.xy, tilingUniforms.uClampFrame.zw);\n\n            var bias = 0.;\n\n            if(unclamped.x == coord.x && unclamped.y == coord.y)\n            {\n                bias = -32.;\n            } \n\n            outColor = textureSampleBias(uTexture, uSampler, coord, bias);\n        "}},x={name:"tiling-bit",vertex:{header:"\n            uniform mat3 uTextureTransform;\n            uniform vec4 uSizeAnchor;\n        \n        ",main:"\n            uv = (uTextureTransform * vec3(aUV, 1.0)).xy;\n\n            position = (position - uSizeAnchor.zw) * uSizeAnchor.xy;\n        "},fragment:{header:"\n            uniform sampler2D uTexture;\n            uniform mat3 uMapCoord;\n            uniform vec4 uClampFrame;\n            uniform vec2 uClampOffset;\n        ",main:"\n\n        vec2 coord = vUV + ceil(uClampOffset - vUV);\n        coord = (uMapCoord * vec3(coord, 1.0)).xy;\n        vec2 unclamped = coord;\n        coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);\n        \n        outColor = texture(uTexture, coord, unclamped == coord ? 0.0 : -32.0);// lod-bias very negative to force lod 0\n    \n        "}};let _,b;class y extends p.e{constructor(){_??(_=(0,u.d)({name:"tiling-sprite-shader",bits:[d.XH,m,c.j]})),b??(b=(0,u.o)({name:"tiling-sprite-shader",bits:[d.$g,x,c.X]}));const e=new f.o({uMapCoord:{value:new l.y,type:"mat3x3<f32>"},uClampFrame:{value:new Float32Array([0,0,1,1]),type:"vec4<f32>"},uClampOffset:{value:new Float32Array([0,0]),type:"vec2<f32>"},uTextureTransform:{value:new l.y,type:"mat3x3<f32>"},uSizeAnchor:{value:new Float32Array([100,100,.5,.5]),type:"vec4<f32>"}});super({glProgram:b,gpuProgram:_,resources:{localUniforms:new f.o({uTransformMatrix:{value:new l.y,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),tilingUniforms:e,uTexture:g.x.EMPTY.source,uSampler:g.x.EMPTY.source.style}})}updateUniforms(e,t,r,i,n,s){const a=this.resources.tilingUniforms,o=s.width,h=s.height,l=s.textureMatrix,u=a.uniforms.uTextureTransform;u.set(r.a*o/e,r.b*o/t,r.c*h/e,r.d*h/t,r.tx/e,r.ty/t),u.invert(),a.uniforms.uMapCoord=l.mapCoord,a.uniforms.uClampFrame=l.uClampFrame,a.uniforms.uClampOffset=l.uClampOffset,a.uniforms.uTextureTransform=u,a.uniforms.uSizeAnchor[0]=e,a.uniforms.uSizeAnchor[1]=t,a.uniforms.uSizeAnchor[2]=i,a.uniforms.uSizeAnchor[3]=n,s&&(this.resources.uTexture=s.source,this.resources.uSampler=s.source.style)}}class T extends h.x{constructor(){super({positions:new Float32Array([0,0,1,0,1,1,0,1]),uvs:new Float32Array([0,0,1,0,1,1,0,1]),indices:new Uint32Array([0,1,2,0,2,3])})}}const v=new T;class w{constructor(e){this._tilingSpriteDataHash=Object.create(null),this._renderer=e}validateRenderable(e){const t=this._getTilingSpriteData(e),r=t.canBatch;this._updateCanBatch(e);const i=t.canBatch;if(i&&i===r){const{batchableMesh:r}=t;if(r.texture._source!==e.texture._source)return!r.batcher.checkAndUpdateTexture(r,e.texture)}return r!==i}addRenderable(e,t){const r=this._renderer.renderPipes.batch;this._updateCanBatch(e);const i=this._getTilingSpriteData(e),{geometry:n,canBatch:s}=i;if(s){i.batchableMesh||(i.batchableMesh=new o.X);const t=i.batchableMesh;e._didTilingSpriteUpdate&&(e._didTilingSpriteUpdate=!1,this._updateBatchableMesh(e),t.geometry=n,t.mesh=e,t.texture=e._texture),t.roundPixels=this._renderer._roundPixels|e._roundPixels,r.addToBatch(t)}else r.break(t),i.shader||(i.shader=new y),this.updateRenderable(e),t.add(e)}execute(e){const{shader:t}=this._tilingSpriteDataHash[e.uid];t.groups[0]=this._renderer.globalUniforms.bindGroup;const r=t.resources.localUniforms.uniforms;r.uTransformMatrix=e.groupTransform,r.uRound=this._renderer._roundPixels|e._roundPixels,(0,a.V)(e.groupColorAlpha,r.uColor,0),this._renderer.encoder.draw({geometry:v,shader:t,state:n.Z.default2d})}updateRenderable(e){const t=this._getTilingSpriteData(e),{canBatch:r}=t;if(r){const{batchableMesh:r}=t;e._didTilingSpriteUpdate&&this._updateBatchableMesh(e),r.batcher.updateElement(r)}else if(e._didTilingSpriteUpdate){const{shader:r}=t;r.updateUniforms(e.width,e.height,e._tileTransform.matrix,e.anchor.x,e.anchor.y,e.texture)}e._didTilingSpriteUpdate=!1}destroyRenderable(e){const t=this._getTilingSpriteData(e);t.batchableMesh=null,t.shader?.destroy(),this._tilingSpriteDataHash[e.uid]=null}_getTilingSpriteData(e){return this._tilingSpriteDataHash[e.uid]||this._initTilingSpriteData(e)}_initTilingSpriteData(e){const t=new h.x({indices:v.indices,positions:v.positions.slice(),uvs:v.uvs.slice()});return this._tilingSpriteDataHash[e.uid]={canBatch:!0,renderable:e,geometry:t},e.on("destroyed",(()=>{this.destroyRenderable(e)})),this._tilingSpriteDataHash[e.uid]}_updateBatchableMesh(e){const t=this._getTilingSpriteData(e),{geometry:r}=t,i=e.texture.source.style;"repeat"!==i.addressMode&&(i.addressMode="repeat",i.update()),function(e,t){const r=e.texture,i=r.frame.width,n=r.frame.height;let s=0,a=0;e._applyAnchorToTexture&&(s=e.anchor.x,a=e.anchor.y),t[0]=t[6]=-s,t[2]=t[4]=1-s,t[1]=t[3]=-a,t[5]=t[7]=1-a;const o=l.y.shared;o.copyFrom(e._tileTransform.matrix),o.tx/=e.width,o.ty/=e.height,o.invert(),o.scale(e.width/i,e.height/n),function(e,t,r,i){let n=0;const s=e.length/2,a=i.a,o=i.b,h=i.c,l=i.d,u=i.tx,d=i.ty;for(r*=2;n<s;){const t=e[r],i=e[r+1];e[r]=a*t+h*i+u,e[r+1]=o*t+l*i+d,r+=2,n++}}(t,0,0,o)}(e,r.uvs),function(e,t){const r=e.anchor.x,i=e.anchor.y;t[0]=-r*e.width,t[1]=-i*e.height,t[2]=(1-r)*e.width,t[3]=-i*e.height,t[4]=(1-r)*e.width,t[5]=(1-i)*e.height,t[6]=-r*e.width,t[7]=(1-i)*e.height}(e,r.positions)}destroy(){for(const e in this._tilingSpriteDataHash)this.destroyRenderable(this._tilingSpriteDataHash[e].renderable);this._tilingSpriteDataHash=null,this._renderer=null}_updateCanBatch(e){const t=this._getTilingSpriteData(e),r=e.texture;let i=!0;return this._renderer.type===s.g.WEBGL&&(i=this._renderer.context.supports.nonPowOf2wrapping),t.canBatch=r.textureMatrix.isSimple&&(i||r.source.isPowerOfTwo),t.canBatch}}w.extension={type:[i.nw.WebGLPipes,i.nw.WebGPUPipes,i.nw.CanvasPipes],name:"tilingSprite"},i.Rw.add(w)},3712:(e,t,r)=>{var i=r(3489),n=r(4162),s=r(5906),a=r(6475),o=r(5321),h=r(8157),l=r(2110),u=r(6600),d=r(9637),c=r(2189),p=r(2267),f=r(4537),g=r(9131);const m={name:"local-uniform-msdf-bit",vertex:{header:"\n            struct LocalUniforms {\n                uColor:vec4<f32>,\n                uTransformMatrix:mat3x3<f32>,\n                uDistance: f32,\n                uRound:f32,\n            }\n\n            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;\n        ",main:"\n            vColor *= localUniforms.uColor;\n            modelMatrix *= localUniforms.uTransformMatrix;\n        ",end:"\n            if(localUniforms.uRound == 1)\n            {\n                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);\n            }\n        "},fragment:{header:"\n            struct LocalUniforms {\n                uColor:vec4<f32>,\n                uTransformMatrix:mat3x3<f32>,\n                uDistance: f32\n            }\n\n            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;\n         ",main:" \n            outColor = vec4<f32>(calculateMSDFAlpha(outColor, localUniforms.uColor, localUniforms.uDistance));\n        "}},x={name:"local-uniform-msdf-bit",vertex:{header:"\n            uniform mat3 uTransformMatrix;\n            uniform vec4 uColor;\n            uniform float uRound;\n        ",main:"\n            vColor *= uColor;\n            modelMatrix *= uTransformMatrix;\n        ",end:"\n            if(uRound == 1.)\n            {\n                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\n            }\n        "},fragment:{header:"\n            uniform float uDistance;\n         ",main:" \n            outColor = vec4(calculateMSDFAlpha(outColor, vColor, uDistance));\n        "}},_={name:"msdf-bit",fragment:{header:"\n            fn calculateMSDFAlpha(msdfColor:vec4<f32>, shapeColor:vec4<f32>, distance:f32) -> f32 {\n                \n                // MSDF\n                var median = msdfColor.r + msdfColor.g + msdfColor.b -\n                    min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -\n                    max(msdfColor.r, max(msdfColor.g, msdfColor.b));\n            \n                // SDF\n                median = min(median, msdfColor.a);\n\n                var screenPxDistance = distance * (median - 0.5);\n                var alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);\n                if (median < 0.01) {\n                    alpha = 0.0;\n                } else if (median > 0.99) {\n                    alpha = 1.0;\n                }\n\n                // Gamma correction for coverage-like alpha\n                var luma: f32 = dot(shapeColor.rgb, vec3<f32>(0.299, 0.587, 0.114));\n                var gamma: f32 = mix(1.0, 1.0 / 2.2, luma);\n                var coverage: f32 = pow(shapeColor.a * alpha, gamma);\n\n                return coverage;\n             \n            }\n        "}},b={name:"msdf-bit",fragment:{header:"\n            float calculateMSDFAlpha(vec4 msdfColor, vec4 shapeColor, float distance) {\n                \n                // MSDF\n                float median = msdfColor.r + msdfColor.g + msdfColor.b -\n                                min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -\n                                max(msdfColor.r, max(msdfColor.g, msdfColor.b));\n               \n                // SDF\n                median = min(median, msdfColor.a);\n            \n                float screenPxDistance = distance * (median - 0.5);\n                float alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);\n           \n                if (median < 0.01) {\n                    alpha = 0.0;\n                } else if (median > 0.99) {\n                    alpha = 1.0;\n                }\n\n                // Gamma correction for coverage-like alpha\n                float luma = dot(shapeColor.rgb, vec3(0.299, 0.587, 0.114));\n                float gamma = mix(1.0, 1.0 / 2.2, luma);\n                float coverage = pow(shapeColor.a * alpha, gamma);  \n              \n                return coverage;\n            }\n        "}};let y,T;class v extends p.e{constructor(){const e=new f.o({uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uTransformMatrix:{value:new o.y,type:"mat3x3<f32>"},uDistance:{value:4,type:"f32"},uRound:{value:0,type:"f32"}}),t=(0,g.I)();y??(y=(0,h.d)({name:"sdf-shader",bits:[l.M,(0,u.m)(t),m,_,d.j]})),T??(T=(0,h.o)({name:"sdf-shader",bits:[l.T,(0,u.h)(t),x,b,d.X]})),super({glProgram:T,gpuProgram:y,resources:{localUniforms:e,batchSamplers:(0,c.O)(t)}})}}var w=r(6151),S=r(7656);class C{constructor(e){this._gpuBitmapText={},this._renderer=e}validateRenderable(e){const t=this._getGpuBitmapText(e);return e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,t)),this._renderer.renderPipes.graphics.validateRenderable(t)}addRenderable(e,t){const r=this._getGpuBitmapText(e);R(e,r),e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,r)),this._renderer.renderPipes.graphics.addRenderable(r,t),r.context.customShader&&this._updateDistanceField(e)}destroyRenderable(e){this._destroyRenderableByUid(e.uid)}_destroyRenderableByUid(e){const t=this._gpuBitmapText[e].context;t.customShader&&(s.u.return(t.customShader),t.customShader=null),s.u.return(this._gpuBitmapText[e]),this._gpuBitmapText[e]=null}updateRenderable(e){const t=this._getGpuBitmapText(e);R(e,t),this._renderer.renderPipes.graphics.updateRenderable(t),t.context.customShader&&this._updateDistanceField(e)}_updateContext(e,t){const{context:r}=t,i=w.W.getFont(e.text,e._style);r.clear(),"none"!==i.distanceField.type&&(r.customShader||(r.customShader=s.u.get(v)));const n=Array.from(e.text),a=e._style;let o=(a._stroke?.width||0)/2;o+=i.baseLineOffset;const h=(0,S._)(n,a,i);let l=0;const u=a.padding,d=h.scale;r.translate(-e._anchor._x*h.width-u,-e._anchor._y*(h.height+h.offsetY)-u).scale(d,d);const c=a._fill.color;for(let e=0;e<h.lines.length;e++){const t=h.lines[e];for(let e=0;e<t.charPositions.length;e++){const s=n[l++],a=i.chars[s];a?.texture&&r.texture(a.texture,c||"black",Math.round(t.charPositions[e]+a.xOffset),Math.round(o+a.yOffset))}o+=i.lineHeight}}_getGpuBitmapText(e){return this._gpuBitmapText[e.uid]||this.initGpuText(e)}initGpuText(e){const t=s.u.get(a.T);return this._gpuBitmapText[e.uid]=t,this._updateContext(e,t),e.on("destroyed",(()=>{this.destroyRenderable(e)})),this._gpuBitmapText[e.uid]}_updateDistanceField(e){const t=this._getGpuBitmapText(e).context,r=e._style.fontFamily,i=n.C.get(`${r}-bitmap`),{a:s,b:a,c:o,d:h}=e.groupTransform,l=Math.sqrt(s*s+a*a),u=Math.sqrt(o*o+h*h),d=(Math.abs(l)+Math.abs(u))/2,c=i.baseRenderedFontSize/e._style.fontSize,p=d*i.distanceField.range*(1/c);t.customShader.resources.localUniforms.uniforms.uDistance=p}destroy(){for(const e in this._gpuBitmapText)this._destroyRenderableByUid(e);this._gpuBitmapText=null,this._renderer=null}}function R(e,t){t.groupTransform=e.groupTransform,t.groupColorAlpha=e.groupColorAlpha,t.groupColor=e.groupColor,t.groupBlendMode=e.groupBlendMode,t.globalDisplayStatus=e.globalDisplayStatus,t.groupTransform=e.groupTransform,t.localDisplayStatus=e.localDisplayStatus,t.groupAlpha=e.groupAlpha,t._roundPixels=e._roundPixels}C.extension={type:[i.nw.WebGLPipes,i.nw.WebGPUPipes,i.nw.CanvasPipes],name:"bitmapText"},i.Rw.add(C)},1709:(e,t,r)=>{var i=r(3489),n=r(9853),s=r(3747),a=r(5906),o=r(900);class h{constructor(e){this._gpuText=Object.create(null),this._renderer=e}validateRenderable(e){const t=this._getGpuText(e),r=e._getKey();return t.textureNeedsUploading?(t.textureNeedsUploading=!1,!0):t.currentKey!==r}addRenderable(e){const t=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),this._renderer.renderPipes.batch.addToBatch(t)}updateRenderable(e){const t=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),t.batcher.updateElement(t)}destroyRenderable(e){this._destroyRenderableById(e.uid)}_destroyRenderableById(e){const t=this._gpuText[e];this._renderer.htmlText.decreaseReferenceCount(t.currentKey),a.u.return(t.batchableSprite),this._gpuText[e]=null}_updateText(e){const t=e._getKey(),r=this._getGpuText(e),i=r.batchableSprite;r.currentKey!==t&&this._updateGpuText(e).catch((e=>{console.error(e)})),e._didTextUpdate=!1;const n=e._style.padding;(0,s.w)(i.bounds,e._anchor,i.texture,n)}async _updateGpuText(e){e._didTextUpdate=!1;const t=this._getGpuText(e);if(t.generatingTexture)return;const r=e._getKey();this._renderer.htmlText.decreaseReferenceCount(t.currentKey),t.generatingTexture=!0,t.currentKey=r;const i=e.resolution??this._renderer.resolution,n=await this._renderer.htmlText.getManagedTexture(e.text,i,e._style,e._getKey()),a=t.batchableSprite;a.texture=t.texture=n,t.generatingTexture=!1,t.textureNeedsUploading=!0,e.onViewUpdate();const o=e._style.padding;(0,s.w)(a.bounds,e._anchor,a.texture,o)}_getGpuText(e){return this._gpuText[e.uid]||this.initGpuText(e)}initGpuText(e){const t={texture:n.x.EMPTY,currentKey:"--",batchableSprite:a.u.get(o.c),textureNeedsUploading:!1,generatingTexture:!1},r=t.batchableSprite;return r.renderable=e,r.texture=n.x.EMPTY,r.bounds={minX:0,maxX:1,minY:0,maxY:0},r.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuText[e.uid]=t,e.on("destroyed",(()=>{this.destroyRenderable(e)})),t}destroy(){for(const e in this._gpuText)this._destroyRenderableById(e);this._gpuText=null,this._renderer=null}}h.extension={type:[i.nw.WebGLPipes,i.nw.WebGPUPipes,i.nw.CanvasPipes],name:"htmlText"};var l=r(6669),u=r(5765),d=r(3646),c=r(4796),p=r(1647);const f="http://www.w3.org/2000/svg",g="http://www.w3.org/1999/xhtml";class m{constructor(){this.svgRoot=document.createElementNS(f,"svg"),this.foreignObject=document.createElementNS(f,"foreignObject"),this.domElement=document.createElementNS(g,"div"),this.styleElement=document.createElementNS(g,"style"),this.image=new Image;const{foreignObject:e,svgRoot:t,styleElement:r,domElement:i}=this;e.setAttribute("width","10000"),e.setAttribute("height","10000"),e.style.overflow="hidden",t.appendChild(e),e.appendChild(r),e.appendChild(i)}}var x=r(3779),_=r(740),b=r(8409);function y(e){const t=b.I.shared.setValue(e.color).setAlpha(e.alpha).toHexa(),r=`${Math.round(Math.cos(e.angle)*e.distance)}px ${Math.round(Math.sin(e.angle)*e.distance)}px`;return e.blur>0?`text-shadow: ${r} ${e.blur}px ${t}`:`text-shadow: ${r} ${t}`}function T(e){return[`-webkit-text-stroke-width: ${e.width}px`,`-webkit-text-stroke-color: ${b.I.shared.setValue(e.color).toHex()}`,`text-stroke-width: ${e.width}px`,`text-stroke-color: ${b.I.shared.setValue(e.color).toHex()}`,"paint-order: stroke"].join(";")}const v={fontSize:"font-size: {{VALUE}}px",fontFamily:"font-family: {{VALUE}}",fontWeight:"font-weight: {{VALUE}}",fontStyle:"font-style: {{VALUE}}",fontVariant:"font-variant: {{VALUE}}",letterSpacing:"letter-spacing: {{VALUE}}px",align:"text-align: {{VALUE}}",padding:"padding: {{VALUE}}px",whiteSpace:"white-space: {{VALUE}}",lineHeight:"line-height: {{VALUE}}px",wordWrapWidth:"max-width: {{VALUE}}px"},w={fill:e=>`color: ${b.I.shared.setValue(e).toHex()}`,breakWords:e=>"word-wrap: "+(e?"break-all":"break-word"),stroke:T,dropShadow:y};class S extends x.p{constructor(e={}){super(e),this._cssOverrides=[],this.cssOverrides??(this.cssOverrides=e.cssOverrides),this.tagStyles=e.tagStyles??{}}set cssOverrides(e){this._cssOverrides=e instanceof Array?e:[e],this.update()}get cssOverrides(){return this._cssOverrides}_generateKey(){return this._styleKey=(0,_.L)(this)+this._cssOverrides.join("-"),this._styleKey}update(){this._cssStyle=null,super.update()}clone(){return new S({align:this.align,breakWords:this.breakWords,dropShadow:this.dropShadow?{...this.dropShadow}:null,fill:this._fill,fontFamily:this.fontFamily,fontSize:this.fontSize,fontStyle:this.fontStyle,fontVariant:this.fontVariant,fontWeight:this.fontWeight,letterSpacing:this.letterSpacing,lineHeight:this.lineHeight,padding:this.padding,stroke:this._stroke,whiteSpace:this.whiteSpace,wordWrap:this.wordWrap,wordWrapWidth:this.wordWrapWidth,cssOverrides:this.cssOverrides})}get cssStyle(){return this._cssStyle||(this._cssStyle=function(e){const t=e._stroke,r=e._fill,i=[`div { ${[`color: ${b.I.shared.setValue(r.color).toHex()}`,`font-size: ${e.fontSize}px`,`font-family: ${e.fontFamily}`,`font-weight: ${e.fontWeight}`,`font-style: ${e.fontStyle}`,`font-variant: ${e.fontVariant}`,`letter-spacing: ${e.letterSpacing}px`,`text-align: ${e.align}`,`padding: ${e.padding}px`,`white-space: ${"pre"===e.whiteSpace&&e.wordWrap?"pre-wrap":e.whiteSpace}`,...e.lineHeight?[`line-height: ${e.lineHeight}px`]:[],...e.wordWrap?["word-wrap: "+(e.breakWords?"break-all":"break-word"),`max-width: ${e.wordWrapWidth}px`]:[],...t?[T(t)]:[],...e.dropShadow?[y(e.dropShadow)]:[],...e.cssOverrides].join(";")} }`];return function(e,t){for(const r in e){const i=e[r],n=[];for(const e in i)w[e]?n.push(w[e](i[e])):v[e]&&n.push(v[e].replace("{{VALUE}}",i[e]));t.push(`${r} { ${n.join(";")} }`)}}(e.tagStyles,i),i.join(" ")}(this)),this._cssStyle}addOverride(...e){const t=e.filter((e=>!this.cssOverrides.includes(e)));t.length>0&&(this.cssOverrides.push(...t),this.update())}removeOverride(...e){const t=e.filter((e=>this.cssOverrides.includes(e)));t.length>0&&(this.cssOverrides=this.cssOverrides.filter((e=>!t.includes(e))),this.update())}set fill(e){"string"!=typeof e&&"number"!=typeof e&&(0,c.Z)("[HTMLTextStyle] only color fill is not supported by HTMLText"),super.fill=e}set stroke(e){e&&"string"!=typeof e&&"number"!=typeof e&&(0,c.Z)("[HTMLTextStyle] only color stroke is not supported by HTMLText"),super.stroke=e}}var C=r(4162);async function R(e,t){const r=await async function(e){const t=await d.z.get().fetch(e),r=await t.blob(),i=new FileReader;return await new Promise(((e,t)=>{i.onloadend=()=>e(i.result),i.onerror=t,i.readAsDataURL(r)}))}(t);return`@font-face {\n        font-family: "${e.fontFamily}";\n        src: url('${r}');\n        font-weight: ${e.fontWeight};\n        font-style: ${e.fontStyle};\n    }`}const M=new Map;var B=r(131),P=r(3374);let U;class k{constructor(e){this._activeTextures={},this._renderer=e,this._createCanvas=e.type===u.g.WEBGPU}getTexture(e){return this._buildTexturePromise(e.text,e.resolution,e.style)}getManagedTexture(e,t,r,i){if(this._activeTextures[i])return this._increaseReferenceCount(i),this._activeTextures[i].promise;const n=this._buildTexturePromise(e,t,r).then((e=>(this._activeTextures[i].texture=e,e)));return this._activeTextures[i]={texture:null,promise:n,usageCount:1},n}async _buildTexturePromise(e,t,r){const i=a.u.get(m),n=function(e,t){const r=t.fontFamily,i=[],n={},s=e.match(/font-family:([^;"\s]+)/g);function a(e){n[e]||(i.push(e),n[e]=!0)}if(Array.isArray(r))for(let e=0;e<r.length;e++)a(r[e]);else a(r);s&&s.forEach((e=>{a(e.split(":")[1].trim())}));for(const e in t.tagStyles)a(t.tagStyles[e].fontFamily);return i}(e,r),s=await async function(e,t,r){const i=e.filter((e=>C.C.has(`${e}-and-url`))).map(((e,i)=>{if(!M.has(e)){const{url:n}=C.C.get(`${e}-and-url`);0===i?M.set(e,R(t,n)):M.set(e,R({fontWeight:r.fontWeight,fontStyle:r.fontStyle,fontFamily:e},n))}return M.get(e)}));return(await Promise.all(i)).join("\n")}(n,r,S.defaultTextStyle),o=function(e,t,r,i){i=i||U||(U=new m);const{domElement:n,styleElement:s,svgRoot:a}=i;n.innerHTML=`<style>${t.cssStyle}</style><div>${e}</div>`,n.setAttribute("style","transform-origin: top left; display: inline-block"),r&&(s.textContent=r),document.body.appendChild(a);const o=n.getBoundingClientRect();a.remove();const h=P.c.measureFont(t.fontStyle).descent;return{width:o.width,height:o.height+h}}(e,r,s,i),h=Math.ceil(Math.ceil(Math.max(1,o.width)+2*r.padding)*t),l=Math.ceil(Math.ceil(Math.max(1,o.height)+2*r.padding)*t),u=i.image;u.width=0|h,u.height=0|l;const c=function(e,t,r,i,n){const{domElement:s,styleElement:a,svgRoot:o}=n;s.innerHTML=`<style>${t.cssStyle}</style><div>${e}</div>`,s.setAttribute("style",`transform: scale(${r});transform-origin: top left; display: inline-block`),a.textContent=i;const{width:h,height:l}=n.image;return o.setAttribute("width",h.toString()),o.setAttribute("height",l.toString()),(new XMLSerializer).serializeToString(o)}(e,r,t,s,i);await function(e,t,r){return new Promise((async i=>{r&&await new Promise((e=>setTimeout(e,100))),e.onload=()=>{i()},e.src=`data:image/svg+xml;charset=utf8,${encodeURIComponent(t)}`,e.crossOrigin="anonymous"}))}(u,c,function(){const{userAgent:e}=d.z.get().getNavigator();return/^((?!chrome|android).)*safari/i.test(e)}()&&n.length>0);let f=u;this._createCanvas&&(f=function(e,t){const r=B.h.getOptimalCanvasAndContext(e.width,e.height,t),{context:i}=r;return i.clearRect(0,0,e.width,e.height),i.drawImage(e,0,0),B.h.returnCanvasAndContext(r),r.canvas}(u,t));const g=(0,p.H)(f,u.width,u.height,t);return this._createCanvas&&this._renderer.texture.initSource(g.source),a.u.return(i),g}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}decreaseReferenceCount(e){const t=this._activeTextures[e];t&&(t.usageCount--,0===t.usageCount&&(t.texture?this._cleanUp(t):t.promise.then((e=>{t.texture=e,this._cleanUp(t)})).catch((()=>{(0,c.Z)("HTMLTextSystem: Failed to clean texture")})),this._activeTextures[e]=null))}_cleanUp(e){l.z.returnTexture(e.texture),e.texture.source.resource=null,e.texture.source.uploadMethodId="unknown"}getReferenceCount(e){return this._activeTextures[e].usageCount}destroy(){this._activeTextures=null}}k.extension={type:[i.nw.WebGLSystem,i.nw.WebGPUSystem,i.nw.CanvasSystem],name:"htmlText"},k.defaultFontOptions={fontFamily:"Arial",fontStyle:"normal",fontWeight:"normal"},i.Rw.add(k),i.Rw.add(h)},2:(e,t,r)=>{var i=r(3489),n=r(3747),s=r(5906),a=r(900);class o{constructor(e){this._gpuText=Object.create(null),this._renderer=e}validateRenderable(e){const t=this._getGpuText(e),r=e._getKey();if(t.currentKey!==r){const r=e.resolution??this._renderer.resolution,{width:i,height:n}=this._renderer.canvasText.getTextureSize(e.text,r,e._style);return 1!==this._renderer.canvasText.getReferenceCount(t.currentKey)||i!==t.texture._source.width||n!==t.texture._source.height}return!1}addRenderable(e,t){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),this._renderer.renderPipes.batch.addToBatch(r)}updateRenderable(e){const t=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),t.batcher.updateElement(t)}destroyRenderable(e){this._destroyRenderableById(e.uid)}_destroyRenderableById(e){const t=this._gpuText[e];this._renderer.canvasText.decreaseReferenceCount(t.currentKey),s.u.return(t.batchableSprite),this._gpuText[e]=null}_updateText(e){const t=e._getKey(),r=this._getGpuText(e),i=r.batchableSprite;r.currentKey!==t&&this._updateGpuText(e),e._didTextUpdate=!1;const s=e._style.padding;(0,n.w)(i.bounds,e._anchor,i.texture,s)}_updateGpuText(e){const t=this._getGpuText(e),r=t.batchableSprite;t.texture&&this._renderer.canvasText.decreaseReferenceCount(t.currentKey),t.texture=r.texture=this._renderer.canvasText.getManagedTexture(e),t.currentKey=e._getKey(),r.texture=t.texture}_getGpuText(e){return this._gpuText[e.uid]||this.initGpuText(e)}initGpuText(e){const t={texture:null,currentKey:"--",batchableSprite:s.u.get(a.c)};return t.batchableSprite.renderable=e,t.batchableSprite.bounds={minX:0,maxX:1,minY:0,maxY:0},t.batchableSprite.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuText[e.uid]=t,this._updateText(e),e.on("destroyed",(()=>{this.destroyRenderable(e)})),t}destroy(){for(const e in this._gpuText)this._destroyRenderableById(e);this._gpuText=null,this._renderer=null}}o.extension={type:[i.nw.WebGLPipes,i.nw.WebGPUPipes,i.nw.CanvasPipes],name:"text"};var h=r(8409),l=r(4181),u=r(131),d=r(6669),c=r(3904);function p(e,t,r){for(let i=0,n=4*r*t;i<t;++i,n+=4)if(0!==e[n+3])return!1;return!0}function f(e,t,r,i,n){const s=4*t;for(let t=i,a=i*s+4*r;t<=n;++t,a+=s)if(0!==e[a+3])return!1;return!0}var g=r(156),m=r(3779),x=r(1647),_=r(3374),b=r(13),y=r(778);class T{constructor(e){this._activeTextures={},this._renderer=e}getTextureSize(e,t,r){const i=_.c.measureText(e||" ",r);let n=Math.ceil(Math.ceil(Math.max(1,i.width)+2*r.padding)*t),s=Math.ceil(Math.ceil(Math.max(1,i.height)+2*r.padding)*t);return n=Math.ceil(n-1e-6),s=Math.ceil(s-1e-6),n=(0,l.a9)(n),s=(0,l.a9)(s),{width:n,height:s}}getTexture(e,t,r,i){"string"==typeof e&&((0,g.a)("8.0.0","CanvasTextSystem.getTexture: Use object TextOptions instead of separate arguments"),e={text:e,style:r,resolution:t}),e.style instanceof m.p||(e.style=new m.p(e.style));const{texture:n,canvasAndContext:s}=this.createTextureAndCanvas(e);return this._renderer.texture.initSource(n._source),u.h.returnCanvasAndContext(s),n}createTextureAndCanvas(e){const{text:t,style:r}=e,i=e.resolution??this._renderer.resolution,n=_.c.measureText(t||" ",r),s=Math.ceil(Math.ceil(Math.max(1,n.width)+2*r.padding)*i),a=Math.ceil(Math.ceil(Math.max(1,n.height)+2*r.padding)*i),o=u.h.getOptimalCanvasAndContext(s,a),{canvas:h}=o;this.renderTextToCanvas(t,r,i,o);const l=(0,x.H)(h,s,a,i);if(r.trim){const e=function(e,t=1){const{width:r,height:i}=e,n=e.getContext("2d",{willReadFrequently:!0});if(null===n)throw new TypeError("Failed to get canvas 2D context");const s=n.getImageData(0,0,r,i).data;let a=0,o=0,h=r-1,l=i-1;for(;o<i&&p(s,r,o);)++o;if(o===i)return c.A.EMPTY;for(;p(s,r,l);)--l;for(;f(s,r,a,o,l);)++a;for(;f(s,r,h,o,l);)--h;return++h,++l,new c.A(a/t,o/t,(h-a)/t,(l-o)/t)}(h,i);l.frame.copyFrom(e),l.updateUvs()}return{texture:l,canvasAndContext:o}}getManagedTexture(e){const t=e._getKey();if(this._activeTextures[t])return this._increaseReferenceCount(t),this._activeTextures[t].texture;const{texture:r,canvasAndContext:i}=this.createTextureAndCanvas(e);return this._activeTextures[t]={canvasAndContext:i,texture:r,usageCount:1},r}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}decreaseReferenceCount(e){const t=this._activeTextures[e];if(t.usageCount--,0===t.usageCount){u.h.returnCanvasAndContext(t.canvasAndContext),d.z.returnTexture(t.texture);const r=t.texture.source;r.resource=null,r.uploadMethodId="unknown",r.alphaMode="no-premultiply-alpha",this._activeTextures[e]=null}}getReferenceCount(e){return this._activeTextures[e].usageCount}renderTextToCanvas(e,t,r,i){const{canvas:n,context:s}=i,a=(0,b.M)(t),o=_.c.measureText(e||" ",t),l=o.lines,u=o.lineHeight,d=o.lineWidths,c=o.maxLineWidth,p=o.fontProperties,f=n.height;s.resetTransform(),s.scale(r,r);const g=2*t.padding;if(s.clearRect(0,0,o.width+4+g,o.height+4+g),t._stroke?.width){const e=t._stroke;s.lineWidth=e.width,s.miterLimit=e.miterLimit,s.lineJoin=e.join,s.lineCap=e.cap}let m,x;s.font=a;const T=t.dropShadow?2:1;for(let e=0;e<T;++e){const n=t.dropShadow&&0===e,a=n?Math.ceil(Math.max(1,f)+2*t.padding):0,o=a*r;if(n){s.fillStyle="black",s.strokeStyle="black";const e=t.dropShadow,i=e.color,n=e.alpha;s.shadowColor=h.I.shared.setValue(i).setAlpha(n).toRgbaString();const a=e.blur*r,l=e.distance*r;s.shadowBlur=a,s.shadowOffsetX=Math.cos(e.angle)*l,s.shadowOffsetY=Math.sin(e.angle)*l+o}else s.globalAlpha=t._fill?.alpha??1,s.fillStyle=t._fill?(0,y.m)(t._fill,s):null,t._stroke?.width&&(s.strokeStyle=(0,y.m)(t._stroke,s)),s.shadowColor="black";let g=(u-p.fontSize)/2;u-p.fontSize<0&&(g=0);const _=t._stroke?.width??0;for(let e=0;e<l.length;e++)m=_/2,x=_/2+e*u+p.ascent+g,"right"===t.align?m+=c-d[e]:"center"===t.align&&(m+=(c-d[e])/2),t._stroke?.width&&this._drawLetterSpacing(l[e],t,i,m+t.padding,x+t.padding-a,!0),void 0!==t._fill&&this._drawLetterSpacing(l[e],t,i,m+t.padding,x+t.padding-a)}}_drawLetterSpacing(e,t,r,i,n,s=!1){const{context:a}=r,o=t.letterSpacing;let h=!1;if(_.c.experimentalLetterSpacingSupported&&(_.c.experimentalLetterSpacing?(a.letterSpacing=`${o}px`,a.textLetterSpacing=`${o}px`,h=!0):(a.letterSpacing="0px",a.textLetterSpacing="0px")),0===o||h)return void(s?a.strokeText(e,i,n):a.fillText(e,i,n));let l=i;const u=_.c.graphemeSegmenter(e);let d=a.measureText(e).width,c=0;for(let e=0;e<u.length;++e){const t=u[e];s?a.strokeText(t,l,n):a.fillText(t,l,n);let r="";for(let t=e+1;t<u.length;++t)r+=u[t];c=a.measureText(r).width,l+=d-c+o,d=c}}destroy(){this._activeTextures=null}}T.extension={type:[i.nw.WebGLSystem,i.nw.WebGPUSystem,i.nw.CanvasSystem],name:"canvasText"},i.Rw.add(T),i.Rw.add(o)},1647:(e,t,r)=>{r.d(t,{H:()=>s});var i=r(6669);const n=new(r(535).Y);function s(e,t,r,s){const a=n;a.minX=0,a.minY=0,a.maxX=e.width/s|0,a.maxY=e.height/s|0;const o=i.z.getOptimalTexture(a.width,a.height,s,!1);return o.source.uploadMethodId="image",o.source.resource=e,o.source.alphaMode="premultiply-alpha-on-upload",o.frame.width=t/s,o.frame.height=r/s,o.source.emit("update",o.source),o.updateUvs(),o}}}]);