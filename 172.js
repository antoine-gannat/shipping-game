"use strict";(self.webpackChunkshipping_game=self.webpackChunkshipping_game||[]).push([[172],{8157:(n,e,t)=>{t.d(e,{o:()=>y,d:()=>U});var o=t(749),r=t(1982),i=t(4796);function a(n,e,t){if(n)for(const o in n){const r=e[o.toLocaleLowerCase()];if(r){let e=n[o];"header"===o&&(e=e.replace(/@in\s+[^;]+;\s*/g,"").replace(/@out\s+[^;]+;\s*/g,"")),t&&r.push(`//----${t}----//`),r.push(e)}else(0,i.Z)(`${o} placement hook does not exist in shader`)}}const u=/\{\{(.*?)\}\}/g;function l(n){const e={};return(n.match(u)?.map((n=>n.replace(/[{()}]/g,"")))??[]).forEach((n=>{e[n]=[]})),e}function s(n,e){let t;const o=/@in\s+([^;]+);/g;for(;null!==(t=o.exec(n));)e.push(t[1])}function c(n,e,t=!1){const o=[];s(e,o),n.forEach((n=>{n.header&&s(n.header,o)}));const r=o;t&&r.sort();const i=r.map(((n,e)=>`       @location(${e}) ${n},`)).join("\n");let a=e.replace(/@in\s+[^;]+;\s*/g,"");return a=a.replace("{{in}}",`\n${i}\n`),a}function f(n,e){let t;const o=/@out\s+([^;]+);/g;for(;null!==(t=o.exec(n));)e.push(t[1])}function m(n,e){let t=n;for(const n in e){const o=e[n];t=o.join("\n").length?t.replace(`{{${n}}}`,`//-----${n} START-----//\n${o.join("\n")}\n//----${n} FINISH----//`):t.replace(`{{${n}}}`,"")}return t}const x=Object.create(null),v=new Map;let d=0;function h({template:n,bits:e}){const t=p(n,e);return x[t]||(x[t]=g(n.vertex,n.fragment,e)),x[t]}function p(n,e){return e.map((n=>(v.has(n)||v.set(n,d++),v.get(n)))).sort(((n,e)=>n-e)).join("-")+n.vertex+n.fragment}function g(n,e,t){const o=l(n),r=l(e);return t.forEach((n=>{a(n.vertex,o,n.name),a(n.fragment,r,n.name)})),{vertex:m(n,o),fragment:m(e,r)}}const b="\n    @in aPosition: vec2<f32>;\n    @in aUV: vec2<f32>;\n\n    @out @builtin(position) vPosition: vec4<f32>;\n    @out vUV : vec2<f32>;\n    @out vColor : vec4<f32>;\n\n    {{header}}\n\n    struct VSOutput {\n        {{struct}}\n    };\n\n    @vertex\n    fn main( {{in}} ) -> VSOutput {\n\n        var worldTransformMatrix = globalUniforms.uWorldTransformMatrix;\n        var modelMatrix = mat3x3<f32>(\n            1.0, 0.0, 0.0,\n            0.0, 1.0, 0.0,\n            0.0, 0.0, 1.0\n          );\n        var position = aPosition;\n        var uv = aUV;\n\n        {{start}}\n        \n        vColor = vec4<f32>(1., 1., 1., 1.);\n\n        {{main}}\n\n        vUV = uv;\n\n        var modelViewProjectionMatrix = globalUniforms.uProjectionMatrix * worldTransformMatrix * modelMatrix;\n\n        vPosition =  vec4<f32>((modelViewProjectionMatrix *  vec3<f32>(position, 1.0)).xy, 0.0, 1.0);\n       \n        vColor *= globalUniforms.uWorldColorAlpha;\n\n        {{end}}\n\n        {{return}}\n    };\n",C="\n    @in vUV : vec2<f32>;\n    @in vColor : vec4<f32>;\n   \n    {{header}}\n\n    @fragment\n    fn main(\n        {{in}}\n      ) -> @location(0) vec4<f32> {\n        \n        {{start}}\n\n        var outColor:vec4<f32>;\n      \n        {{main}}\n        \n        return outColor * vColor;\n      };\n",P="\n    in vec2 aPosition;\n    in vec2 aUV;\n\n    out vec4 vColor;\n    out vec2 vUV;\n\n    {{header}}\n\n    void main(void){\n\n        mat3 worldTransformMatrix = uWorldTransformMatrix;\n        mat3 modelMatrix = mat3(\n            1.0, 0.0, 0.0,\n            0.0, 1.0, 0.0,\n            0.0, 0.0, 1.0\n          );\n        vec2 position = aPosition;\n        vec2 uv = aUV;\n        \n        {{start}}\n        \n        vColor = vec4(1.);\n        \n        {{main}}\n        \n        vUV = uv;\n        \n        mat3 modelViewProjectionMatrix = uProjectionMatrix * worldTransformMatrix * modelMatrix;\n\n        gl_Position = vec4((modelViewProjectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\n\n        vColor *= uWorldColorAlpha;\n\n        {{end}}\n    }\n",T="\n   \n    in vec4 vColor;\n    in vec2 vUV;\n\n    out vec4 finalColor;\n\n    {{header}}\n\n    void main(void) {\n        \n        {{start}}\n\n        vec4 outColor;\n      \n        {{main}}\n        \n        finalColor = outColor * vColor;\n    }\n",M={name:"global-uniforms-bit",vertex:{header:"\n        struct GlobalUniforms {\n            uProjectionMatrix:mat3x3<f32>,\n            uWorldTransformMatrix:mat3x3<f32>,\n            uWorldColorAlpha: vec4<f32>,\n            uResolution: vec2<f32>,\n        }\n\n        @group(0) @binding(0) var<uniform> globalUniforms : GlobalUniforms;\n        "}},$={name:"global-uniforms-bit",vertex:{header:"\n          uniform mat3 uProjectionMatrix;\n          uniform mat3 uWorldTransformMatrix;\n          uniform vec4 uWorldColorAlpha;\n          uniform vec2 uResolution;\n        "}};function U({bits:n,name:e}){const t=function({template:n,bits:e}){const t=p(n,e);if(x[t])return x[t];const{vertex:o,fragment:r}=function(n,e){const t=e.map((n=>n.vertex)).filter((n=>!!n)),o=e.map((n=>n.fragment)).filter((n=>!!n));let r=c(t,n.vertex,!0);return r=function(n,e){const t=[];f(e,t),n.forEach((n=>{n.header&&f(n.header,t)}));let o=0;const r=t.sort().map((n=>n.indexOf("builtin")>-1?n:`@location(${o++}) ${n}`)).join(",\n"),i=t.sort().map((n=>{return`       var ${e=n,e.replace(/@.*?\s+/g,"")};`;var e})).join("\n"),a=`return VSOutput(\n                ${t.sort().map((n=>` ${function(n){const e=/\b(\w+)\s*:/g.exec(n);return e?e[1]:""}(n)}`)).join(",\n")});`;let u=e.replace(/@out\s+[^;]+;\s*/g,"");return u=u.replace("{{struct}}",`\n${r}\n`),u=u.replace("{{start}}",`\n${i}\n`),u=u.replace("{{return}}",`\n${a}\n`),u}(t,r),{vertex:r,fragment:c(o,n.fragment,!0)}}(n,e);return x[t]=g(o,r,e),x[t]}({template:{fragment:C,vertex:b},bits:[M,...n]});return r.O.from({name:e,vertex:{source:t.vertex,entryPoint:"main"},fragment:{source:t.fragment,entryPoint:"main"}})}function y({bits:n,name:e}){return new o.J({name:e,...h({template:{vertex:P,fragment:T},bits:[$,...n]})})}},2110:(n,e,t)=>{t.d(e,{M:()=>o,T:()=>r});const o={name:"color-bit",vertex:{header:"\n            @in aColor: vec4<f32>;\n        ",main:"\n            vColor *= vec4<f32>(aColor.rgb * aColor.a, aColor.a);\n        "}},r={name:"color-bit",vertex:{header:"\n            in vec4 aColor;\n        ",main:"\n            vColor *= vec4(aColor.rgb * aColor.a, aColor.a);\n        "}}},6600:(n,e,t)=>{t.d(e,{h:()=>c,m:()=>u});var o=t(9131);const r={};function i(n){const e=[];if(1===n)e.push("@group(1) @binding(0) var textureSource1: texture_2d<f32>;"),e.push("@group(1) @binding(1) var textureSampler1: sampler;");else{let t=0;for(let o=0;o<n;o++)e.push(`@group(1) @binding(${t++}) var textureSource${o+1}: texture_2d<f32>;`),e.push(`@group(1) @binding(${t++}) var textureSampler${o+1}: sampler;`)}return e.join("\n")}function a(n){const e=[];if(1===n)e.push("outColor = textureSampleGrad(textureSource1, textureSampler1, vUV, uvDx, uvDy);");else{e.push("switch vTextureId {");for(let t=0;t<n;t++)t===n-1?e.push("  default:{"):e.push(`  case ${t}:{`),e.push(`      outColor = textureSampleGrad(textureSource${t+1}, textureSampler${t+1}, vUV, uvDx, uvDy);`),e.push("      break;}");e.push("}")}return e.join("\n")}function u(n){return r[n]||(r[n]={name:"texture-batch-bit",vertex:{header:"\n                @in aTextureIdAndRound: vec2<u32>;\n                @out @interpolate(flat) vTextureId : u32;\n            ",main:"\n                vTextureId = aTextureIdAndRound.y;\n            ",end:"\n                if(aTextureIdAndRound.x == 1)\n                {\n                    vPosition = vec4<f32>(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);\n                }\n            "},fragment:{header:`\n                @in @interpolate(flat) vTextureId: u32;\n    \n                ${i((0,o.I)())}\n            `,main:`\n                var uvDx = dpdx(vUV);\n                var uvDy = dpdy(vUV);\n    \n                ${a((0,o.I)())}\n            `}}),r[n]}const l={};function s(n){const e=[];for(let t=0;t<n;t++)t>0&&e.push("else"),t<n-1&&e.push(`if(vTextureId < ${t}.5)`),e.push("{"),e.push(`\toutColor = texture(uTextures[${t}], vUV);`),e.push("}");return e.join("\n")}function c(n){return l[n]||(l[n]={name:"texture-batch-bit",vertex:{header:"\n                in vec2 aTextureIdAndRound;\n                out float vTextureId;\n              \n            ",main:"\n                vTextureId = aTextureIdAndRound.y;\n            ",end:"\n                if(aTextureIdAndRound.x == 1.)\n                {\n                    gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\n                }\n            "},fragment:{header:`\n                in float vTextureId;\n    \n                uniform sampler2D uTextures[${n}];\n              \n            `,main:`\n    \n                ${s((0,o.I)())}\n            `}}),l[n]}},8070:(n,e,t)=>{t.d(e,{$g:()=>i,Kt:()=>r,XH:()=>o});const o={name:"local-uniform-bit",vertex:{header:"\n\n            struct LocalUniforms {\n                uTransformMatrix:mat3x3<f32>,\n                uColor:vec4<f32>,\n                uRound:f32,\n            }\n\n            @group(1) @binding(0) var<uniform> localUniforms : LocalUniforms;\n        ",main:"\n            vColor *= localUniforms.uColor;\n            modelMatrix *= localUniforms.uTransformMatrix;\n        ",end:"\n            if(localUniforms.uRound == 1)\n            {\n                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);\n            }\n        "}},r={...o,vertex:{...o.vertex,header:o.vertex.header.replace("group(1)","group(2)")}},i={name:"local-uniform-bit",vertex:{header:"\n\n            uniform mat3 uTransformMatrix;\n            uniform vec4 uColor;\n            uniform float uRound;\n        ",main:"\n            vColor *= uColor;\n            modelMatrix = uTransformMatrix;\n        ",end:"\n            if(uRound == 1.)\n            {\n                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\n            }\n        "}}},9637:(n,e,t)=>{t.d(e,{X:()=>r,j:()=>o});const o={name:"round-pixels-bit",vertex:{header:"\n            fn roundPixels(position: vec2<f32>, targetSize: vec2<f32>) -> vec2<f32> \n            {\n                return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\n            }\n        "}},r={name:"round-pixels-bit",vertex:{header:"   \n            vec2 roundPixels(vec2 position, vec2 targetSize)\n            {       \n                return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\n            }\n        "}}},6669:(n,e,t)=>{t.d(e,{z:()=>u});var o=t(4181),r=t(5206),i=t(9853);let a=0;const u=new class{constructor(n){this._poolKeyHash=Object.create(null),this._texturePool={},this.textureOptions=n||{},this.enableFullScreen=!1}createTexture(n,e,t){const o=new r.p({...this.textureOptions,width:n,height:e,resolution:1,antialias:t,autoGarbageCollect:!0});return new i.x({source:o,label:"texturePool_"+a++})}getOptimalTexture(n,e,t=1,r){let i=Math.ceil(n*t-1e-6),a=Math.ceil(e*t-1e-6);i=(0,o.a9)(i),a=(0,o.a9)(a);const u=(i<<17)+(a<<1)+(r?1:0);this._texturePool[u]||(this._texturePool[u]=[]);let l=this._texturePool[u].pop();return l||(l=this.createTexture(i,a,r)),l.source._resolution=t,l.source.width=i/t,l.source.height=a/t,l.source.pixelWidth=i,l.source.pixelHeight=a,l.frame.x=0,l.frame.y=0,l.frame.width=n,l.frame.height=e,l.updateUvs(),this._poolKeyHash[l.uid]=u,l}getSameSizeTexture(n,e=!1){const t=n.source;return this.getOptimalTexture(n.width,n.height,t._resolution,e)}returnTexture(n){const e=this._poolKeyHash[n.uid];this._texturePool[e].push(n)}clear(n){if(n=!1!==n)for(const n in this._texturePool){const e=this._texturePool[n];if(e)for(let n=0;n<e.length;n++)e[n].destroy(!0)}this._texturePool={}}}},9989:(n,e,t)=>{function o(n,e,t){const o=(n>>24&255)/255;e[t++]=(255&n)/255*o,e[t++]=(n>>8&255)/255*o,e[t++]=(n>>16&255)/255*o,e[t++]=o}t.d(e,{V:()=>o})},900:(n,e,t)=>{t.d(e,{c:()=>o});class o{constructor(){this.vertexSize=4,this.indexSize=6,this.location=0,this.batcher=null,this.batch=null,this.roundPixels=0}get blendMode(){return this.renderable.groupBlendMode}packAttributes(n,e,t,o){const r=this.renderable,i=this.texture,a=r.groupTransform,u=a.a,l=a.b,s=a.c,c=a.d,f=a.tx,m=a.ty,x=this.bounds,v=x.maxX,d=x.minX,h=x.maxY,p=x.minY,g=i.uvs,b=r.groupColorAlpha,C=o<<16|65535&this.roundPixels;n[t+0]=u*d+s*p+f,n[t+1]=c*p+l*d+m,n[t+2]=g.x0,n[t+3]=g.y0,e[t+4]=b,e[t+5]=C,n[t+6]=u*v+s*p+f,n[t+7]=c*p+l*v+m,n[t+8]=g.x1,n[t+9]=g.y1,e[t+10]=b,e[t+11]=C,n[t+12]=u*v+s*h+f,n[t+13]=c*h+l*v+m,n[t+14]=g.x2,n[t+15]=g.y2,e[t+16]=b,e[t+17]=C,n[t+18]=u*d+s*h+f,n[t+19]=c*h+l*d+m,n[t+20]=g.x3,n[t+21]=g.y3,e[t+22]=b,e[t+23]=C}packIndex(n,e,t){n[e]=t+0,n[e+1]=t+1,n[e+2]=t+2,n[e+3]=t+0,n[e+4]=t+2,n[e+5]=t+3}reset(){this.renderable=null,this.texture=null,this.batcher=null,this.batch=null,this.bounds=null}}}}]);